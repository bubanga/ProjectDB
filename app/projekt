petrol:
    id, INT, Klucz główny, unikalny identyfikator typu paliwa
    name, VARCHAR, Unikalna nazwa typu paliwa
    price, decimal, Cena paliwa
    volume, FLOAT, Pojemność zbiornika
    current_volume, FLOAT, Aktualna objętość paliwa w zbiorniku

petrol_history
    id
    price
    petrol_id
    time

position:
    id
    name

distributor:
    id, INT, Klucz główny, unikalny identyfikator dystrybutora
    petrol_id, INT, Klucz obcy, odnoszący się do typ paliwa
    station_id

transaction:
    id, INT, Klucz główny, unikalny identyfikator transakcji
    station_id, INT, Klucz obcy, odnoszący się do Dystrybutorów
    petrol_history_id
    client, VARCHAR, Nr rejestracji
    litreage, FLOAT, Ilość zakupionego paliwa
    time, DATETIME, Data i czas transakcji

CREATE TRIGGER after_transaction_history_insert AFTER INSERT ON transaction_history
    FOR EACH ROW
BEGIN
    SET @petrol_id = (SELECT petrol_id FROM petrol_history WHERE id = NEW.petrol_history_id);
    UPDATE petrol SET current_volume = current_volume-NEW.litreage WHERE id = @petrol_id;
END;

alter view v_pending_transactions as
    select
        t.id,
        t.litreage * ph.price * IF(t.car_id, (select 1-discount from car c where c.id = t.car_id), 1) as 'price',
        t.litreage,
        t.time,
        p.name as 'position',
        p2.name as 'petrol'
    from transaction t
             join distributor d on d.id = t.distributor_id
             join position p on p.id = d.position_id
             join petrol_history ph on ph.id = t.petrol_history_id
             join petrol p2 on p2.id = d.petrol_id
    where status = 0;